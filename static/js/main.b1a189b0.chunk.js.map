{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","myList","updateMyList","input","updateInput","detail","insertDetail","detailList","updateDetailList","className","Container","Row","Col","md","Input","type","placeholder","value","onChange","e","target","Button","onClick","map","i","index","title","newList","splice","deleteItem","details","key","item","push","handleDetails","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kRAoFeA,MAhFf,WAAgB,IAAD,EACkBC,mBAAS,IAD3B,mBACNC,EADM,KACEC,EADF,OAEgBF,mBAAS,IAFzB,mBAENG,EAFM,KAECC,EAFD,OAGkBJ,mBAAS,IAH3B,mBAGNK,EAHM,KAGEC,EAHF,OAI0BN,mBAAS,IAJnC,mBAINO,EAJM,KAIMC,EAJN,KAqCb,OACE,qBAAKC,UAAU,MAAf,SACE,eAACC,EAAA,EAAD,CAAWD,UAAU,MAArB,UACE,kDACA,cAACE,EAAA,EAAD,UACE,eAACC,EAAA,EAAD,CAAKC,GAAG,IAAIJ,UAAU,UAAtB,UACE,cAACK,EAAA,EAAD,CAAOC,KAAK,OAAOC,YAAY,mBAAmBC,MAAOd,EAAOe,SAAU,SAAAC,GAAC,OAAIf,EAAYe,EAAEC,OAAOH,UACpG,cAACI,EAAA,EAAD,CAAQZ,UAAU,oBAAoBa,QAvC5B,WACL,IAATnB,GACFD,EAAa,GAAD,mBAAKD,GAAL,CACZ,CACE,MAASE,EACT,QAAW,OAEfC,EAAY,KAgCJ,4BAGJ,cAACO,EAAA,EAAD,CAAKF,UAAU,OAAf,SAEIR,EAAOsB,KAAI,SAACC,EAAGC,GAAJ,OACT,cAACb,EAAA,EAAD,CAAKC,GAAG,IAAR,SACE,eAACD,EAAA,EAAD,CAAKC,GAAG,KAAKJ,UAAU,UAAvB,UACE,oBAAIA,UAAU,YAAd,SAA2Be,EAAEE,QAC7B,sBAAMjB,UAAU,SACda,QAAS,kBAvCR,SAACG,GAClB,IAAME,EAAO,YAAO1B,GACpB0B,EAAQC,OAAOH,EAAO,GACtBvB,EAAayB,GAoCkBE,CAAWJ,IAD5B,eAEA,eAACd,EAAA,EAAD,WAEIa,EAAEM,QAAQP,KAAI,SAAClB,EAAQ0B,GAAT,OACZ,cAACnB,EAAA,EAAD,CAAKC,GAAG,KAAR,SACE,cAACC,EAAA,EAAD,CAAOC,KAAK,OAAOE,MAAOZ,KADV0B,MAItB,eAACnB,EAAA,EAAD,CAAKC,GAAG,KACNJ,UAAU,gCADZ,UAEE,cAACK,EAAA,EAAD,CAAOC,KAAK,OACVC,YAAY,gBACZC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAaa,EAAEC,OAAOH,UACvC,cAACI,EAAA,EAAD,CAAQZ,UAAU,SAASa,QAAS,SAAAH,GAAC,OA/CnC,SAACO,GACrB,GAAc,IAAVrB,EAAc,CAAC,IAAD,gBACCJ,GADD,IAChB,2BAAyB,CAAC,IAAjB+B,EAAgB,QACnBA,EAAKN,QAAUA,GACjBlB,EAAiB,GAAD,mBACXD,GADW,CAEdyB,EAAKF,QAAQG,KAAK5B,OALR,8BAShBC,EAAa,KAqC6C4B,CAAcV,EAAEE,QAA1D,2BAlBSD,cC1ChBU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b1a189b0.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\nimport { Input, Button, Container, Row, Col } from 'reactstrap';\n\nfunction App() {\n  const [myList, updateMyList] = useState([]);\n  const [input, updateInput] = useState(\"\");\n  const [detail, insertDetail] = useState(\"\");\n  const [detailList, updateDetailList] = useState([]);\n  const updateArray = () => {\n    if (input != \"\")\n      updateMyList([...myList,\n      {\n        \"title\": input,\n        \"details\": []\n      }]);\n    updateInput(\"\");\n  }\n\n  const deleteItem = (index) => {\n    const newList = [...myList];\n    newList.splice(index, 1);\n    updateMyList(newList);\n  }\n\n  const handleDetails = (title) => {\n    if (detail != \"\") {\n      for (let item of myList) {\n        if (item.title === title) {\n          updateDetailList([\n            ...detailList,\n            item.details.push(detail)\n          ]);\n        }\n      }\n      insertDetail(\"\");\n    }\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <Container className=\"p-2\">\n        <h1>React To Do List</h1>\n        <Row>\n          <Col md=\"6\" className=\"mx-auto\">\n            <Input type=\"text\" placeholder=\"Enter List Items\" value={input} onChange={e => updateInput(e.target.value)} />\n            <Button className=\"btn-primary  mt-2\" onClick={updateArray}>Add Tasks</Button>\n          </Col>\n        </Row>\n        <Row className=\"mt-5\">\n          {\n            myList.map((i, index) =>\n              <Col md=\"4\" key={index}>\n                <Col md=\"12\" className=\"ListBox\">\n                  <h4 className=\"text-left\">{i.title}</h4>\n                  <span className=\"delete\"\n                    onClick={() => deleteItem(index)}>X</span>\n                  <Row>\n                    {\n                      i.details.map((detail, key) =>\n                        <Col md=\"12\" key={key}>\n                          <Input type=\"text\" value={detail}></Input>\n                        </Col>)\n                    }\n                    <Col md=\"12\"\n                      className=\"d-flex justify-content-center\">\n                      <Input type=\"text\"\n                        placeholder=\"Enter details\"\n                        value={detail}\n                        onChange={e => insertDetail(e.target.value)} />\n                      <Button className=\"btn-sm\" onClick={e => (handleDetails(i.title))} >Add</Button></Col>\n                  </Row>\n                </Col>\n              </Col>\n            )\n          }\n        </Row>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}